plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.google.dagger.hilt.android'
    id 'com.google.devtools.ksp'
}

android {
    namespace 'com.kssidll.arrugarq'
    compileSdk 34

    defaultConfig {
        applicationId "com.kssidll.arrugarq"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        resourceConfigurations += ["en", "pl"]
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            matchingFallbacks = []
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.3'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    // AndroidX
    implementation("androidx.activity:activity-compose:1.7.2")
    implementation("androidx.core:core-splashscreen:1.0.1")
    implementation("androidx.appcompat:appcompat:1.7.0-alpha03")
    implementation("androidx.datastore:datastore-preferences-android:1.1.0-alpha05")
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2")
    implementation("com.google.accompanist:accompanist-systemuicontroller:0.30.1")

    // Navigation
    implementation("dev.olshevski.navigation:reimagined:1.5.0")
    implementation("dev.olshevski.navigation:reimagined-hilt:1.5.0")

    // Compose
    implementation("androidx.compose.ui:ui:1.6.0-alpha06")
    implementation("androidx.compose.ui:ui-tooling-preview:1.6.0-alpha06")
    debugImplementation "androidx.compose.ui:ui-tooling:1.6.0-alpha06"
    debugImplementation "androidx.compose.ui:ui-test-manifest:1.6.0-alpha06"
    implementation("androidx.compose.material3:material3:1.2.0-alpha08")
    implementation("androidx.compose.material3:material3-window-size-class:1.2.0-alpha08")
    implementation("androidx.compose.material:material-icons-extended:1.6.0-alpha06")
    implementation("androidx.compose.material:material:1.6.0-alpha06")

    // DI
    implementation("com.google.dagger:hilt-android:2.48")
    debugImplementation 'androidx.compose.ui:ui-tooling:1.5.1'
    kapt("com.google.dagger:hilt-compiler:2.48")

    // Room
    implementation("androidx.room:room-ktx:2.6.0-rc01")
    ksp("androidx.room:room-compiler:2.6.0-rc01")
    ksp("androidx.room:room-ktx:2.6.0-rc01")


    implementation("me.xdrop:fuzzywuzzy:1.4.0")
    implementation("com.patrykandpatrick.vico:compose:1.12.0")
    implementation("com.patrykandpatrick.vico:compose-m3:1.12.0")
}

ksp {
    arg(new RoomSchemaArgProvider(new File(projectDir, "schemas")))
}

class RoomSchemaArgProvider implements CommandLineArgumentProvider {

    @InputDirectory
    @PathSensitive(PathSensitivity.RELATIVE)
    File schemaDir

    RoomSchemaArgProvider(File schemaDir) {
        this.schemaDir = schemaDir
    }

    @Override
    Iterable<String> asArguments() {
        return ["room.schemaLocation=${schemaDir.path}".toString()]
    }
}
